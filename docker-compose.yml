version: "3.7"

volumes:
  data:
    driver: local
  redis:
    driver: local
  data01:
    driver: local

services:
  db:
    image: "mysql:8.0.21"
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
  
  redis:
    image: "redis:6.0"
    container_name: redis
    command: redis-server
    ports: 
      - "6379:6379"
    volumes:
      - "redis:/data"
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200               

  web:
    depends_on:
      - db
      - redis
      - elasticsearch
    build: .
    ports:
      - "3000:3000"
    environment:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: Task_Management_System
      DB_PORT: 3306
      DB_HOST: db
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
      REDIS_URL: redis://redis:6379/0
      ELASTICSEARCH_URL: elasticsearch
    volumes:
      - ".:/app"
    links: 
      - db
      - redis
      - elasticsearch

  worker:
    depends_on:
      - web
      - db
      - redis
    build: .
    command: sidekiq -C config/sidekiq.yml
    volumes:
      - ".:/app"
    environment:
      REDIS_URL: redis://redis:6379/0
    links: 
      - db
      - redis
      - web
    entrypoint: ./sidekiq-entrypoint.sh
